{"version":3,"sources":["components/Product.js","components/Table.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["Product","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","setState","prod","data","title","price","brand","condition","stock","button","picTable","shipping","_this2","links","images","map","el","push","url_source","arrRows","react_default","a","createElement","className","src","alt","name","shipping_depth","dimensions_unit","shipping_width","shipping_height","weight","weight_unit","onClick","check","id","type","Component","Table","handleClick","event","preventDefault","click","target","updateState","closeButtonCheck","console","log","apiCheck","axios","get","headers","Accept","Authorization","then","res","results","catch","err","table","rows","_this3","chosen","info","components_Product","key","url","pic","Body","components_Table","App","components_Body","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50ad9f02.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Product extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    componentDidMount() {\n\n        this.setState({prod: this.props.data});\n\n    }\n    \n    render() {\n\n        let title;\n\n        let price;\n\n        let brand;\n\n        let condition;\n\n        let stock;\n\n        let button;\n\n        let arr;\n\n        let links = [];\n\n        let picTable;\n\n        let shipping;\n\n        if (this.state.prod){\n\n            arr = this.state.prod.images;\n\n            arr.map((el)=>{\n\n                links.push(el.url_source);\n    \n            });\n\n            let arrRows = links.map(el=>{\n\n                return (\n\n                    <img className='product' src={el} alt={this.state.name}></img>\n\n                )\n\n            });\n\n            title = <h1>{this.state.prod.name}</h1>;\n\n            price = <h2>Price: {this.state.prod.price}</h2>;\n\n            brand = <h2>Brand: {this.state.prod.brand}</h2>;\n\n            condition = <h2>Condition: {this.state.prod.condition}</h2>;\n\n            stock = <h2>Stock: {this.state.prod.stock}</h2>;\n\n            shipping = <div><h2>Shipping info:</h2><h3>Length: {this.state.prod.shipping_depth} {this.state.prod.dimensions_unit}, Width: {this.state.prod.shipping_width} {this.state.prod.dimensions_unit}, Height: {this.state.prod.shipping_height} {this.state.prod.dimensions_unit}<br></br>Weight: {this.state.prod.weight} {this.state.prod.weight_unit}</h3></div>\n\n            picTable = \n            \n            <table className='full center'>\n                <thead>\n                    <td>\n                        {arrRows}\n                    </td>\n                </thead>\n            </table>\n\n            button = <button onClick={this.props.check} id={this.state.prod.id} type=\"button\">Close</button>;\n\n        }\n\n        return(\n\n            <div className='center'>\n\n                {title}\n\n                {brand}\n\n                {picTable}\n\n                {price}\n\n                {condition}\n\n                {stock}\n\n                {shipping}\n\n                {button}\n\n            </div>\n\n        )\n\n    }\n\n}\n\nexport default Product;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Product from './Product';\n\nclass Table extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    componentDidMount() {\n\n        console.log('table mounted');\n\n        this.apiCheck();\n\n    }\n\n    apiCheck() {\n\n        return axios.get('https://api.software.madkting.com/shops/76/products/?page_size=100', {headers: {'Accept': 'application/json', 'Authorization': 'Token cb0763f1c60a3583dd23f629e3a8bf9c2eebc8a0'}}).then(res=>{\n\n            this.setState({results: res.data});\n\n        }).catch(err=>{\n\n            console.log(err);\n\n        });\n\n    }\n\n    handleClick = event => {\n\n        event.preventDefault();\n    \n        let click = event.target.id;\n    \n        this.updateState(click);\n    };\n\n    updateState(click) {\n\n        this.setState({id: click});\n\n    }\n\n    closeButtonCheck = event => {\n\n        event.preventDefault();\n\n        this.setState({id: false});\n\n    }\n\n    render() {\n\n        console.log('state of state for render', this.state);\n\n        let table;\n\n        let rows;\n\n        if (this.state.id) {\n\n            let chosen = this.state.id;\n\n            let info = this.state.results[chosen];\n\n            return (\n\n                <Product data={info} check={this.closeButtonCheck}/>\n\n            )\n\n        }\n\n        if (this.state.results) {\n\n            rows = this.state.results.map((el, key)=>{\n\n                let images = el.images;\n\n                let url = images[0].url_source;\n\n                let pic = <img className='pic' src={url} alt={el.name}></img>\n\n                let button = <button onClick={this.handleClick} id={key} type=\"button\">Product details</button>\n\n                return (\n\n                    <tr><td>{key + 1}</td><td>{el.name}</td><td>{pic}</td><td>{el.price}</td><td>{el.stock}</td><td>{button}</td></tr>\n\n                )\n\n            });\n\n            table = <table className='full center'>\n\n                    <thead>\n\n                        <tr>\n\n                            <th>ID</th>\n\n                            <th>Name</th>\n\n                            <th>Image</th>\n\n                            <th>Price</th>\n\n                            <th>Stock</th>\n\n                            <th></th>\n\n                        </tr>\n\n                    </thead>\n\n                    <tbody>\n\n                        {rows}\n\n                    </tbody>\n\n                </table>\n\n        } else {\n\n            console.log('state is not ready');\n\n            table = <h1 className='center'>LOADING...</h1>;\n\n        }\n\n        return(\n\n            table\n\n        )\n\n    }\n\n}\n\nexport default Table;","import React, { Component } from 'react';\nimport Table from './Table';\n\nclass Body extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n    \n    render() {\n\n        return(\n\n            <Table />\n\n        )\n\n    }\n\n}\n\nexport default Body;","import React, { Component } from 'react';\nimport './App.css';\nimport Body from './components/Body'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Body />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}